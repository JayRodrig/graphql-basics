type Query {
    users(query: String): [User!]!
    predictions(query: String): [Prediction!]!
}

type Mutation {
    createUser(data: createUserInput!): User!
    deleteUser(data: UserWhereUniqueInput!): User!
    updateUser(where: UserWhereUniqueInput!, data: UserUpdateInput!): User!
    createPrediction(data: createPredictionInput!): Prediction!
}

input createUserInput {
    name: String!
    email: String!
    age: Int
}

input UserUpdateInput {
    name: String
    email: String
    age: Int
}

input UserWhereUniqueInput {
    id: ID
    email: String
}

input createPredictionInput {
    author: UserConnectToPrediction!
    ballondor: String!
    champions_league: String!
    la_liga: String!
    premier_league: String!
    serie_a: String!
    bundesliga: String!
    ligue_1: String!
    eurocup: String!
    copa_america: String!
}

input UserConnectToPrediction {
    connect: UserWhereUniqueInput!
}

type User {
    id: ID!
    name: String!
    email: String!
    age: Int
    predictions: [Prediction!]!
}

type Prediction {
    id: ID!
    author: User!
    ballondor: String!
    champions_league: String!
    la_liga: String!
    premier_league: String!
    serie_a: String!
    bundesliga: String!
    ligue_1: String!
    eurocup: String!
    copa_america: String!
}